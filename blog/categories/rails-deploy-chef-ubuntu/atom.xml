<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails,Deploy,Chef,Ubuntu | Geekontheway]]></title>
  <link href="http://geekontheway.github.com/blog/categories/rails-deploy-chef-ubuntu/atom.xml" rel="self"/>
  <link href="http://geekontheway.github.com/"/>
  <updated>2011-12-09T11:36:44+08:00</updated>
  <id>http://geekontheway.github.com/</id>
  <author>
    <name><![CDATA[Bill Zh]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[从ssl说起]]></title>
    <link href="http://geekontheway.github.com/blog/2011/12/08/from-ssl-to-ssh/"/>
    <updated>2011-12-08T19:20:00+08:00</updated>
    <id>http://geekontheway.github.com/blog/2011/12/08/from-ssl-to-ssh</id>
    <content type="html"><![CDATA[<p>起因是昨天要部署公司的一个测试项目Emall到linode服务器，作为新手的我艰难的使用
<code>cap staging deploy:cold</code>诸如此类的命令,结果一开始就报错，原因很简单，deploy.rb文件和~/config/deploy/staging.rb中的代码有错误，capistrano的机制改天得画出一个流程图来，不然老觉得难理解.错误：</p>

<p> <img src="http://p4.42qu.us/721/820/149300.jpg"></p>

<p> 查了下原因，官方这么描述：</p>

<blockquote><p>Before deploying an app that uses Bundler, Add your Gemfile and Gemfile.lock to source control, but ignore the .bundle folder, which is specific to each machine.
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ echo ".bundle\n" >> .gitignore
</span><span class='line'>$ git add Gemfile Gemfile.lock .gitignore
</span><span class='line'>$ git commit -m "Add Bundler support"</span></code></pre></td></tr></table></div></figure></notextile></div>
然后在deploy.rb中加入<code>require "bundler/capistrano"</code>
 <img src="http://p4.42qu.us/721/819/149299.jpg"></p></blockquote>

<p>数据没部署上去,应该是链接没做好,部署脚本是之前同事写的,关于Symlink这部分,我又谷歌了一下:</p>

<p><code>Update @ 2011-12-9 11:17</code></p>

<ul>
<li><p>The <code>current</code>directory is where the most current version of your Rails application is located. Each time you deploy your application, the contents of this directory are overwritten with your new changes.</p></li>
<li><p>The <code>releases</code> directory stores previous releases of your application, which allow Capistrano to "roll back" changes in the event that something goes wrong. Each time you deploy your application, the contents of the current directory are moved to the releases before the new version is copied to the current directory. You will want to limit the number of previous releases that are stored to preserve disk space. This can be done by running cap deploy:cleanup.</p></li>
<li><p>The <code>shared</code> directory contains assets that are independent of the version of your application. In other words, the shared directory is left alone during a deployment, which makes it a perfect place to hold uploaded files and documents that you want to preserve between migrations.This is a great time to mention that that config/database.yml file is a wonderful candidate for storing in the shared directory and symlinking to it. By doing this, you can avoid having to publish your development and testing passwords, and multiple developers can easily collaborate on the same project.</p></li>
</ul>


<p>Rather than having to manually create our symlinks,  Luckily, we can create a Capistrano deployment recipe that automates this task.Since our application is already up and running, we will only be adding some things to the end of the recipe that is currently in place for your web host. In this example we create a namespace called "customs" for our new tasks:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>namespace(:customs) do
</span><span class='line'>  task :config, :roles => :app do&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>run &lt;&lt;-CMD
</span><span class='line'>  ln -nfs #{shared_path}/system/database.yml #{release_path}/config/database.yml
</span><span class='line'>CMD
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end
</span><span class='line'>  task :symlink, :roles => :app do&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>run &lt;&lt;-CMD
</span><span class='line'>  ln -nfs #{shared_path}/system/uploads #{release_path}/public/uploads
</span><span class='line'>CMD
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In order to get Capistrano to perform these tasks each time we deploy our application, we need to set some hooks by placing the following code at the bottom of our deploy.rb file:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>after "deploy:update_code", "customs:config"
</span><span class='line'>after "deploy:symlink","customs:symlink"
</span><span class='line'>after "deploy", "deploy:cleanup"&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The first line tells Capistrano that after it has performed the update_code methods, which updates the Rails application, that it should symlink to our shared database.yml file so that Rails has the production database configuration settings.</p>

<p>The next line tells Capistrano that once it has finished symlinking the application (a normal deploy involves symlinking to the current directory), it should then create the symlink for our uploads directory.</p>

<p>Finally, I have added a third line that tells Capistrano to finish it all up by running the cap deploy:cleanup task, which removes all but the last 5 releases from the releases directory. We do this for good housekeeping reasons so that we are not bloating our server with releases that we don't need.</p>

<p>报错提示：
<img src="http://p4.42qu.us/721/821/149301.jpg"></p>

<p>好像是rvm不能选择ruby版本的问题。[后来发了一个帖子关于Linode上RVM的奇怪问题，每次ssh登陆服务器后，发现rvm并未选择ruby版本，即使上次登陆的时候<code>rvm --default use ree</code>][http://ruby-china.org/topics/386],用了大家给的方法后,没找到合适答案后,折腾开始了:</p>

<ul>
<li><code>rvm uninstall ree</code>,<code>rvm install ree</code>报错了</li>
<li><code>rm -rf /usr/local/rvm</code>,并取消了rvm有关的环境设置,下载了ree的源码，编译，安装passenger出错,大改是说
<code>openssl lib installed no longer supports SSLv2</code>,老大注释了源码中sslv2相关的部分，ok了.然而Emall依然部署不上去,所以后来想了想,还是rebuild linode服务器吧。还是犹豫了一下,因为好久以来都是在上面部署的服务，很多服务还是处于一半的状况,没办法从头来吧.</li>
<li>ssh到服务器，做最基本的配置：</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>Welcome to Ubuntu!
</span><span class='line'> * Documentation:  https://help.ubuntu.com/
</span><span class='line'>Last login: Wed Dec  7 21:24:41 2011 from 182.18.65.14&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>root@li389-178:~# echo "log.networking.io" > /etc/hostname
</span><span class='line'>root@li389-178:~# hostname -F /etc/hostname&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>root@log:~# sudo dpkg-reconfigure tzdata&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>Current default time zone: 'Asia/Chongqing'
</span><span class='line'>Local time is now:      Thu Dec  8 10:28:55 CST 2011.
</span><span class='line'>Universal Time is now:  Thu Dec  8 02:28:55 UTC 2011.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div>
- 因为又要装很多服务，而且也会有很多配置,考虑到效率，选择使用chef。
- ok。今天的折腾就开始了，chef的文档太详细了！丰富到我在众多的流程转向If Else中不知方向...好吧,最后终于知道怎么新建一个node节点了，可是第一步<code>knife bootstrap host -u root -P passwd</code>就ssh keys出错了,应该是kes不匹配,修改了.ssh/known_hosts后ok了.</p>
]]></content>
  </entry>
  
</feed>
